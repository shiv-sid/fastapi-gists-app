name: CI/CD Pipeline - FastAPI Gists App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  checkout:
    name: 1️⃣ Checkout Source
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

  setup:
    name: 2️⃣ Setup Environment
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install Dependencies
        run: pip install -r requirements-dev.txt

  sast:
    name: 3️⃣ Static Code Analysis (SAST)
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Lint with Flake8
        run: |
          pip install flake8
          flake8 app/ tests/

  test:
    name: 4️⃣ Run Unit Tests
    runs-on: ubuntu-latest
    needs: sast
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install Test Dependencies
        run: pip install -r requirements-dev.txt
      - name: Run Pytest
        run: pytest --maxfail=1 --disable-warnings -q

  build:
    name: 5️⃣ Build, Scan & Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Build, Scan and Push Docker image
        # expose secrets as env for use in the shell step
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-gists-app:${{ github.sha }}
        run: |
          set -euo pipefail

          LATEST="${DOCKERHUB_USERNAME}/fastapi-gists-app:latest"

          # Login to Docker Hub
          echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

          # Build image
          docker build -t "$IMAGE" .

          # Scan with Trivy (run as a container that connects to local docker daemon)
          # --exit-code 0 ensures scan does not fail the job if vulnerabilities are found.
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasecurity/trivy:latest \
            image --format table --exit-code 0 "$IMAGE"

          # Push image and tag as latest
          docker push "$IMAGE"
          docker tag "$IMAGE" "$LATEST"
          docker push "$LATEST"